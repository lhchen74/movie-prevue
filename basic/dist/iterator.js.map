{"version":3,"sources":["../src/iterator.js"],"names":["makeInterator","arr","i","length","gen","console","log","next","value","done"],"mappings":";;mDAiCUA,a;;AAjCV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAIA;;;AAGA,SAAUA,aAAV,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACaC,qBADb,GACiB,CADjB;;AAAA;AAAA,0BACoBA,IAAID,IAAIE,MAD5B;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAEcF,IAAIC,CAAJ,CAFd;;AAAA;AACoCA,uBADpC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAME,MAAMJ,cAAc,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAd,CAAZ;AACAK,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB,EAA8BJ,IAAIG,IAAJ,GAAWE,IAAzC","file":"iterator.js","sourcesContent":["// function makeInterator (arr) {\n//     let nextIndex = 0\n    \n//     // 返回一个迭代器对象\n//     return {\n//         next: () => {\n//             // next() 方法返回的结果对象\n//             if (nextIndex < arr.length) {\n//                 return {\n//                     value: arr[nextIndex++],\n//                     done: false\n//                 }\n//             } else {\n//                 return {\n//                     done: true\n//                 }\n//             }\n//         }\n//     }\n// }\n\n// const it = makeInterator(['吃饭', '睡觉', '打豆豆'])\n\n// console.log(it.next().value)\n// console.log(it.next().value)\n// console.log(it.next().value)\n// console.log(it.next().value, it.next().done)\n\n\n\n/**\n * 生成器简化迭代器创建过程, 使用 * & yield\n */\nfunction *makeInterator (arr) {\n    for (let i = 0; i < arr.length; i++) {\n        yield arr[i]\n    }\n}\n\nconst gen = makeInterator(['吃饭', '睡觉', '打豆豆'])\nconsole.log(gen.next().value)\nconsole.log(gen.next().value)\nconsole.log(gen.next().value)\nconsole.log(gen.next().value, gen.next().done)"]}